const DrumPad =  [
                {
                    "key": "Q",
                    "song": "Heater-1",
                    "url": "https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3"
                },
                {
                    "key": "W",
                    "song": "Heater-2",
                    "url": "https://s3.amazonaws.com/freecodecamp/drums/Heater-2.mp3"
                },
                {
                    "key": "E",
                    "song": "Heater-3",
                    "url": "https://s3.amazonaws.com/freecodecamp/drums/Heater-3.mp3"
                },
                {
                    "key": "A",
                    "song": "Heater-4",
                    "url": "https://s3.amazonaws.com/freecodecamp/drums/Heater-4_1.mp3"
                },
                {
                    "key": "S",
                    "song": "Heater-6",
                    "url": "https://s3.amazonaws.com/freecodecamp/drums/Heater-6.mp3"
                },
                {
                    "key": "D",
                    "song": "Dsc_Oh",
                    "url": "https://s3.amazonaws.com/freecodecamp/drums/Dsc_Oh.mp3"
                },
                {
                    "key": "Z",
                    "song": "Kick_n_Hat",
                    "url": "https://s3.amazonaws.com/freecodecamp/drums/Kick_n_Hat.mp3"
                },
                {
                    "key": "X",
                    "song": "RP4_KICK_1",
                    "url": "https://s3.amazonaws.com/freecodecamp/drums/RP4_KICK_1.mp3"
                },
                {
                    "key": "C",
                    "song": "Cev_H2",
                    "url": "https://s3.amazonaws.com/freecodecamp/drums/Cev_H2.mp3"
                }
            ]

class DrumPads extends React.Component {

 componentDidMount(){
   console.log(this.audio)
   document.addEventListener("keydown",this.handleKeydown)  
 }
  
  componentWillUnmount(){
    document.removeEventListener("keydown",this.handleKeydown)
  }
  
  handleKeydown = e => {
    if(e.keyCode === this.props.id.charCodeAt()){
     this.audio.play()
    this.audio.currentTime = 0
    this.props.handleDisplay(this.props.song) 
    }
  }

  handleClick = () => {
    this.audio.play()
    this.audio.currentTime = 0
    this.props.handleDisplay(this.props.song)
  }
  
  render() {
    return (
      <div>
        <button className='drum-pad' 
          id={this.props.id}
          onClick={this.handleClick}>{this.props.id}
          
        <audio id={this.props.id}
               className="clip"
               src={this.props.url}
               ref={ref => this.audio = ref}></audio></button>
      </div>
    )
  }
}

class DrumMachine extends React.Component {
  constructor(props){
    super(props)
    this.state = {
      title: ""
    }
    this.handleDisplay=this.handleDisplay.bind(this)
  }
  
 handleDisplay(title){
  this.setState({ title })}
  
  
  
  render(){
    return(
    <div id='drum-machine'>
        <div id='display'>{this.state.title}</div>
        <div id='drum-pads'>{DrumPad.map(i => (
          <DrumPads
            id={i.key}
            song={i.song}
            url={i.url}
            handleDisplay={this.handleDisplay}
          />   
         ))}</div>
    </div>
    )
  }
}

ReactDOM.render(<DrumMachine/>,document.getElementById("root"))
